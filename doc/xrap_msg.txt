xrap_msg(3)
===========

NAME
----
xrap_msg - xrap serialization

SYNOPSIS
--------
----
//  Create a new xrap_msg
xrap_msg_t *
    xrap_msg_new (int id);

//  Destroy the xrap_msg
void
    xrap_msg_destroy (xrap_msg_t **self_p);

//  Receive and parse a xrap_msg from the input
xrap_msg_t *
    xrap_msg_recv (void *input);

//  Send the xrap_msg to the output, and destroy it
int
    xrap_msg_send (xrap_msg_t **self_p, void *output);

//  Send the METHOD to the output in one step
int
    xrap_msg_send_method (void *output,
        char *whatever,
        zhash_t *headers,
        zframe_t *content);
    
//  Duplicate the xrap_msg message
xrap_msg_t *
    xrap_msg_dup (xrap_msg_t *self);

//  Print contents of message to stdout
void
    xrap_msg_dump (xrap_msg_t *self);

//  Get/set the message address
zframe_t *
    xrap_msg_address (xrap_msg_t *self);
void
    xrap_msg_set_address (xrap_msg_t *self, zframe_t *address);

//  Get the xrap_msg id and printable command
int
    xrap_msg_id (xrap_msg_t *self);
void
    xrap_msg_set_id (xrap_msg_t *self, int id);
char *
    xrap_msg_command (xrap_msg_t *self);

//  Get/set the whatever field
char *
    xrap_msg_whatever (xrap_msg_t *self);
void
    xrap_msg_set_whatever (xrap_msg_t *self, char *format, ...);

//  Get/set the headers field
zhash_t *
    xrap_msg_headers (xrap_msg_t *self);
void
    xrap_msg_set_headers (xrap_msg_t *self, zhash_t *headers);
    
//  Get/set a value in the headers dictionary
char *
    xrap_msg_headers_string (xrap_msg_t *self, char *key, char *default_value);
uint64_t
    xrap_msg_headers_number (xrap_msg_t *self, char *key, uint64_t default_value);
void
    xrap_msg_headers_insert (xrap_msg_t *self, char *key, char *format, ...);
size_t
    xrap_msg_headers_size (xrap_msg_t *self);

//  Get/set the content field
zframe_t *
    xrap_msg_content (xrap_msg_t *self);
void
    xrap_msg_set_content (xrap_msg_t *self, zframe_t *frame);

//  Self test of this class
int
    xrap_msg_test (bool verbose);
----

DESCRIPTION
-----------

xrap_msg - xrap serialization


EXAMPLE
-------
.From xrap_msg_test method
----
    //  Simple create/destroy test
    xrap_msg_t *self = xrap_msg_new (0);
    assert (self);
    xrap_msg_destroy (&self);

    //  Create pair of sockets we can send through
    zctx_t *ctx = zctx_new ();
    assert (ctx);

    void *output = zsocket_new (ctx, ZMQ_DEALER);
    assert (output);
    zsocket_bind (output, "inproc://selftest");
    void *input = zsocket_new (ctx, ZMQ_ROUTER);
    assert (input);
    zsocket_connect (input, "inproc://selftest");
    
    //  Encode/send/decode and verify each message type

    self = xrap_msg_new (XRAP_MSG_METHOD);
    xrap_msg_set_whatever (self, "Life is short but Now lasts for ever");
    xrap_msg_headers_insert (self, "Name", "Brutus");
    xrap_msg_headers_insert (self, "Age", "%d", 43);
    xrap_msg_set_content (self, zframe_new ("Captcha Diem", 12));
    xrap_msg_send (&self, output);
    
    self = xrap_msg_recv (input);
    assert (self);
    assert (streq (xrap_msg_whatever (self), "Life is short but Now lasts for ever"));
    assert (xrap_msg_headers_size (self) == 2);
    assert (streq (xrap_msg_headers_string (self, "Name", "?"), "Brutus"));
    assert (xrap_msg_headers_number (self, "Age", 0) == 43);
    assert (zframe_streq (xrap_msg_content (self), "Captcha Diem"));
    xrap_msg_destroy (&self);

    zctx_destroy (&ctx);
----

SEE ALSO
--------
linkxrap:xrap[7]
